{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/methods/addLayerIfPresent.js","webpack://exports/./src/methods/buildColumnGroup.js","webpack://exports/./src/methods/buildPaletteBoard.js","webpack://exports/./src/methods/buildPaletteCell.js","webpack://exports/./src/methods/buildSectionGroup.js","webpack://exports/./src/methods/getSharedBorderStyles.js","webpack://exports/./src/methods/getSharedFillStyles.js","webpack://exports/./src/methods/parseLayers.js","webpack://exports/./src/methods/processLayerColors.js","webpack://exports/./src/setupPalette.js","webpack://exports/./src/utils/arrayMatches.js","webpack://exports/./src/utils/constants.js","webpack://exports/./src/utils/loc.js","webpack://exports/./src/utils/strings.js","webpack://exports/external \"sketch\""],"names":["addLayerIfPresent","layer","group","layers","push","buildColumnGroup","name","frame","headerText","subText","sketch","Group","Rectangle","type","Types","Text","text","style","fontSize","fontWeight","fontFamily","kerning","paragraphSpacing","borders","fixedWidth","Settings","Artboard","buildPaletteBoard","document","sharedFills","layerFills","sharedBorders","layerBorders","artboards","pages","map","page","flat","paletteBoardId","documentSettingForKey","paletteBoard","filter","ab","id","boardFrame","loc","flowStartPoint","setDocumentSettingForKey","coordinates","x","y","sharedStylesGroup","sLFCGroup","buildSectionGroup","sLBCGroup","uniqueStylesGroup","sharedStylesY","lFGroup","lBGroup","height","Math","max","unshift","buildCellText","color","usages","thicknesses","localCoordinates","thicknessPrefix","join","opacity","parseInt","substring","opacitySuffix","toFixed","usagesString","buildPaletteCell","sharedKeys","colorLayers","colorArr","colorFills","colorBorders","includes","whiteBg","ShapePath","shapeType","ShapeType","fills","colorShape","Oval","borderOptions","startArrowHead","endArrowHead","cellHeight","BASE_CELL_HEIGHT","Array","isArray","forEach","key","charLimit","yAdjustment","ceil","length","textLayers","colorGroup","label","colorDict","colors","Object","entries","thickness","getSharedBorderStyles","sharedLayerStyles","reduce","acc","getSharedFillStyles","parseLayers","colorPathDictionary","pageIndex","abIndex","layerIndeces","layerLoop","layerIndex","fill","fillIndex","additionalLayerPath","index","path","border","borderIndex","storedIndeces","processLayerColors","sharedColors","layerColors","arrayMatches","thicknessMatches","matches","newItems","Document","message","UI","setupPalette","getSelectedDocument","arr1","arr2","strict","item","split","strings","paletteName","shared","title","subtitle","unique","fillsHeader","bordersHeader","messages","paletteBuilt","paletteUpdated"],"mappings":"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","file":"__setupPalette.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/setupPalette.js\");\n","export default function addLayerIfPresent(layer, group) {\n    if (layer) {\n        group.layers.push(layer);\n    }\n}\n","import sketch from 'sketch';\n\nexport default function buildColumnGroup(name, frame, headerText, subText) {\n    return new sketch.Group({\n        name,\n        frame: new sketch.Rectangle(...frame),\n        layers: [\n            {\n                type: sketch.Types.Text,\n                text: headerText,\n                style: {\n                    fontSize: 48,\n                    fontWeight: 9,\n                    fontFamily: 'PT Sans',\n                    kerning: null,\n                    paragraphSpacing: 0,\n                    borders: [],\n                },\n            },\n            {\n                type: sketch.Types.Text,\n                text: subText,\n                style: {\n                    fontSize: 14,\n                    fontFamily: 'PT Sans',\n                    kerning: null,\n                    paragraphSpacing: 0,\n                    borders: [],\n                },\n                frame: new sketch.Rectangle(0, 60, 350, 20),\n                fixedWidth: true,\n            },\n        ],\n    });\n}\n","import sketch from 'sketch';\nimport buildSectionGroup from './buildSectionGroup';\nimport addLayerIfPresent from './addLayerIfPresent';\nimport buildColumnGroup from './buildColumnGroup';\nimport loc from '../utils/loc';\n\nconst { Settings, Rectangle, Artboard } = sketch;\n\nexport default function buildPaletteBoard(document, sharedFills, layerFills, sharedBorders, layerBorders) {\n    const artboards = document.pages.map((page) => page.layers).flat();\n\n    const paletteBoardId = Settings.documentSettingForKey(document, 'palette-board-id');\n    let paletteBoard = artboards.filter((ab) => ab.id === paletteBoardId)[0];\n\n    if (!paletteBoard) {\n        const boardFrame = new Rectangle(-4000, 0, 1000, 2000);\n        paletteBoard = new Artboard({\n            name: loc('paletteName'),\n            flowStartPoint: true,\n            frame: boardFrame,\n        });\n\n        Settings.setDocumentSettingForKey(document, 'palette-board-id', paletteBoard.id);\n    }\n\n    let coordinates = {\n        x: 0,\n        y: 150,\n    };\n\n    const sharedStylesGroup = buildColumnGroup(\n        'shared-palette-styles',\n        [75, 75, 400, coordinates.y],\n        loc('shared.title'),\n        loc('shared.subtitle')\n    );\n\n    const sLFCGroup = buildSectionGroup(coordinates, 'shared_layer_fills', loc('fillsHeader'), sharedFills);\n\n    const sLBCGroup = buildSectionGroup(\n        coordinates,\n        'shared_layer_borders',\n        loc('bordersHeader'),\n        sharedBorders,\n        'border'\n    );\n\n    addLayerIfPresent(sLFCGroup, sharedStylesGroup);\n    addLayerIfPresent(sLBCGroup, sharedStylesGroup);\n\n    const uniqueStylesGroup = buildColumnGroup(\n        'unique-palette-styles',\n        [550, 75, 350, coordinates.y],\n        loc('unique.title'),\n        loc('unique.subtitle')\n    );\n\n    const sharedStylesY = coordinates.y;\n    coordinates.y = 150;\n\n    const lFGroup = buildSectionGroup(coordinates, 'layer_fills', loc('fillsHeader'), layerFills);\n\n    const lBGroup = buildSectionGroup(coordinates, 'layer_borders', loc('bordersHeader'), layerBorders, 'border');\n\n    addLayerIfPresent(lFGroup, uniqueStylesGroup);\n    addLayerIfPresent(lBGroup, uniqueStylesGroup);\n\n    paletteBoard.layers = [sharedStylesGroup, uniqueStylesGroup].filter((group) => !!group);\n\n    paletteBoard.frame.height = Math.max(sharedStylesY, coordinates.y) + 100;\n\n    document.pages[0].layers.unshift(paletteBoard);\n}\n","import sketch from 'sketch';\nimport { BASE_CELL_HEIGHT } from '../utils/constants';\n\nexport function buildCellText(color, usages, thicknesses, localCoordinates) {\n    const thicknessPrefix = thicknesses ? `${thicknesses.join('px, ')}px ` : '';\n    const opacity = parseInt(color.substring(7, 9), 16) / 255;\n    const opacitySuffix = opacity < 1 ? ` (${opacity.toFixed(2).substring(1)} opacity)` : '';\n    const usagesString = `${usages} use${usages !== 1 ? 's' : ''}`;\n\n    return [\n        {\n            type: sketch.Types.Text,\n            text: `${thicknessPrefix}${color.substring(0, 7)}${opacitySuffix}`,\n            frame: new sketch.Rectangle(90, localCoordinates.y, 300, 20),\n            style: {\n                fontSize: 17,\n                fontFamily: 'PT Sans',\n                kerning: null,\n                paragraphSpacing: 0,\n                borders: [],\n            },\n        },\n        {\n            type: sketch.Types.Text,\n            text: usagesString,\n            frame: new sketch.Rectangle(90, localCoordinates.y + 20, 300, 20),\n            style: {\n                fontSize: 17,\n                fontFamily: 'PT Sans',\n                kerning: null,\n                paragraphSpacing: 0,\n                borders: [],\n            },\n        },\n    ]; // currently need to be last layers in group\n}\n\nexport default function buildPaletteCell([color, { sharedKeys, usages, thicknesses }], type, coordinates) {\n    let colorLayers = [];\n    const colorArr = [{ color }];\n    let colorFills = [];\n    let colorBorders = [];\n    if (type === 'border') {\n        colorBorders = colorArr;\n    } else {\n        colorFills = colorArr;\n    }\n\n    if (color.includes('#ffffff')) {\n        let whiteBg = {\n            type: sketch.Types.ShapePath,\n            shapeType: sketch.ShapePath.ShapeType.Rectangle,\n            style: {\n                fills: [\n                    {\n                        color: '#000000',\n                    },\n                ],\n                borders: [],\n            },\n            frame: new sketch.Rectangle(0, 0, 80, 80),\n        };\n        colorLayers.push(whiteBg);\n    }\n    let localCoordinates = {\n        x: 10,\n        y: 10,\n    };\n\n    const colorShape = {\n        type: sketch.Types.ShapePath,\n        shapeType: sketch.ShapePath.ShapeType.Oval,\n        style: {\n            fills: colorFills,\n            borders: colorBorders,\n            borderOptions: {\n                startArrowHead: 'FilledCircle',\n                endArrowHead: 'FilledCircle',\n            },\n        },\n        frame: new sketch.Rectangle(localCoordinates.x, localCoordinates.y, 60, 60),\n    };\n    colorLayers.push(colorShape);\n\n    let cellHeight = BASE_CELL_HEIGHT;\n\n    if (Array.isArray(sharedKeys)) {\n        sharedKeys.forEach((key) => {\n            colorLayers.push({\n                type: sketch.Types.Text,\n                text: key,\n                style: {\n                    fontSize: 17,\n                    fontWeight: 12,\n                    fontFamily: 'PT Sans',\n                    kerning: null,\n                    paragraphSpacing: 0,\n                    borders: [],\n                },\n                frame: new sketch.Rectangle(90, localCoordinates.y, 270, 20),\n                fixedWidth: true,\n            });\n\n            const charLimit = 33; // May need adjustments\n            const yAdjustment = Math.ceil(key.length / charLimit) * 20;\n            localCoordinates.y += yAdjustment;\n            cellHeight += yAdjustment;\n        });\n    }\n\n    localCoordinates.y += 10;\n\n    const textLayers = buildCellText(color, usages, thicknesses, localCoordinates);\n    colorLayers.push(...textLayers);\n\n    const colorGroup = new sketch.Group({\n        name: `${type}: ${color}`,\n        layers: colorLayers,\n    });\n    colorGroup.frame.y = coordinates.y;\n\n    coordinates.y += cellHeight;\n    return colorGroup;\n}\n","import sketch from 'sketch';\nimport buildPaletteCell from './buildPaletteCell';\n\nexport default function buildSectionGroup(coordinates, name, label, colorDict, type = 'fill') {\n    const colors = Object.entries(colorDict);\n    if (colors.length === 0) return;\n\n    let layers = [\n        {\n            type: sketch.Types.Text,\n            text: label,\n            style: {\n                fontSize: 30,\n                fontWeight: 12,\n                fontFamily: 'PT Sans',\n                kerning: null,\n                paragraphSpacing: 0,\n                borders: [],\n            },\n            frame: new sketch.Rectangle(0, coordinates.y, 300, 70),\n        },\n        {\n            type: sketch.Types.ShapePath,\n            shapeType: sketch.ShapePath.ShapeType.Rectangle,\n            style: {\n                fills: [],\n                borders: [\n                    {\n                        color: '#bcbcbc',\n                        thickness: 1,\n                    },\n                ],\n            },\n            frame: new sketch.Rectangle(0, coordinates.y + 40, 350, 1),\n        },\n    ];\n\n    coordinates.y += 52;\n\n    colors.forEach((color) => {\n        layers.push(buildPaletteCell(color, type, coordinates));\n    });\n\n    const group = new sketch.Group({ name, layers });\n    coordinates.y += 30;\n    return group;\n}\n","export default function getSharedBorderStyles(document) {\n    return document.sharedLayerStyles.reduce((acc, { name, style: { borders } }) => {\n        borders.forEach(({ color, thickness }) => {\n            if (acc[color]) {\n                acc[color].sharedKeys.push(name);\n\n                if (!acc[color].thicknesses.includes(thickness)) {\n                    acc[color].thicknesses.push(thickness);\n                }\n                return;\n            }\n\n            acc[color] = {\n                sharedKeys: [name],\n                thicknesses: [thickness],\n                usages: 0,\n            };\n        });\n        return acc;\n    }, {});\n}\n","export default function getSharedFillStyles(document) {\n    return document.sharedLayerStyles.reduce((acc, { name, style: { fills } }) => {\n        fills.forEach(({ color }) => {\n            if (acc[color]) {\n                acc[color].sharedKeys.push(name);\n                return;\n            }\n\n            acc[color] = {\n                sharedKeys: [name],\n                usages: 0,\n            };\n        });\n\n        return acc;\n    }, {});\n}\n","import sketch from 'sketch';\n\nexport default function parseLayers(document) {\n    let layerFills = {};\n    let layerBorders = {};\n    const colorPathDictionary = document.pages.reduce((acc, page, pageIndex) => {\n        const paletteBoardId = sketch.Settings.documentSettingForKey(document, 'palette-board-id');\n        page.layers\n            .filter((ab) => ab.id !== paletteBoardId)\n            .forEach((ab, abIndex) => {\n                let layerIndeces = [];\n                function layerLoop(layer, layerIndex) {\n                    if (!layer || !layer.style) {\n                        return;\n                    }\n\n                    layer.style.fills.forEach((fill, fillIndex) => {\n                        const { color } = fill;\n                        if (color) {\n                            const additionalLayerPath = layerIndeces.reduce(\n                                (acc, index) => `${acc}.layers[${index}]`,\n                                ''\n                            );\n                            const path = `pages[${pageIndex}].layers[${\n                                abIndex + 1\n                            }]${additionalLayerPath}.layers[${layerIndex}].style.fills[${fillIndex}].color`;\n                            acc[path] = color;\n\n                            if (layerFills[color]) {\n                                layerFills[color].usages++;\n                                return;\n                            }\n                            layerFills[color] = {\n                                usages: 1,\n                            };\n                        }\n                    });\n\n                    layer.style.borders.forEach((border, borderIndex) => {\n                        const { color, thickness } = border;\n                        if (color) {\n                            const additionalLayerPath = layerIndeces.reduce(\n                                (acc, index) => `${acc}.layers[${index}]`,\n                                ''\n                            );\n                            const path = `pages[${pageIndex}].layers[${\n                                abIndex + 1\n                            }]${additionalLayerPath}.layers[${layerIndex}].style.borders[${borderIndex}].color`;\n                            acc[path] = color;\n\n                            if (layerBorders[color]) {\n                                if (!layerBorders[color].thicknesses.includes(thickness)) {\n                                    layerBorders[color].thicknesses.push(thickness);\n                                }\n                                layerBorders[color].usages++;\n                                return;\n                            }\n                            layerBorders[color] = {\n                                usages: 1,\n                                thicknesses: [thickness],\n                            };\n                        }\n                    });\n\n                    if (Array.isArray(layer.layers)) {\n                        const storedIndeces = [...layerIndeces];\n                        layerIndeces.push(layerIndex);\n                        layer.layers.forEach(layerLoop);\n                        layerIndeces = storedIndeces;\n                    }\n                }\n\n                Array.isArray(ab.layers) && ab.layers.forEach(layerLoop);\n            });\n\n        return acc;\n    }, {});\n\n    return {\n        colorPathDictionary,\n        layerBorders,\n        layerFills,\n    };\n}\n","import arrayMatches from '../utils/arrayMatches';\n\nexport default function processLayerColors(sharedColors, layerColors) {\n    Object.entries(layerColors).forEach(([color, { usages, thicknesses }]) => {\n        if (sharedColors[color]) {\n            const { matches: thicknessMatches, newItems } = arrayMatches(sharedColors[color].thicknesses, thicknesses);\n\n            if (thicknessMatches) {\n                sharedColors[color].usages = usages;\n                delete layerColors[color];\n            } else {\n                layerColors[color].thicknesses = newItems;\n            }\n        }\n    });\n}\n","import sketch from 'sketch';\nimport getSharedFillStyles from './methods/getSharedFillStyles';\nimport getSharedBorderStyles from './methods/getSharedBorderStyles';\nimport parseLayers from './methods/parseLayers';\nimport processLayerColors from './methods/processLayerColors';\nimport buildPaletteBoard from './methods/buildPaletteBoard';\nimport loc from './utils/loc';\n\nconst {\n    Document,\n    Settings,\n    UI: { message },\n} = sketch;\n\nexport default function setupPalette() {\n    const document = Document.getSelectedDocument();\n\n    let sharedFills = getSharedFillStyles(document);\n    let sharedBorders = getSharedBorderStyles(document);\n\n    let { colorPathDictionary, layerFills, layerBorders } = parseLayers(document);\n\n    processLayerColors(sharedFills, layerFills);\n    processLayerColors(sharedBorders, layerBorders);\n\n    Settings.setDocumentSettingForKey(document, 'color-path-dictionary', colorPathDictionary);\n    Settings.setDocumentSettingForKey(document, 'shared-fills', sharedFills);\n    Settings.setDocumentSettingForKey(document, 'shared-borders', sharedBorders);\n    Settings.setDocumentSettingForKey(document, 'layer-fills', layerFills);\n    Settings.setDocumentSettingForKey(document, 'layer-borders', layerBorders);\n\n    buildPaletteBoard(document, sharedFills, layerFills, sharedBorders, layerBorders);\n\n    message(loc('messages.paletteBuilt'));\n}\n","export default function arrayMatches(arr1 = [], arr2 = [], strict = false) {\n    const newItems = arr2.filter((item) => !arr1.includes(item));\n\n    if (arr1.length !== arr2.length || newItems.length) {\n        return {\n            matches: false,\n            newItems,\n        };\n    }\n\n    let matches = true;\n    arr1.forEach((item, index) => {\n        if ((strict && item !== arr2[index]) || !arr2.includes(item)) {\n            matches = false;\n        }\n    });\n\n    return { matches, newItems };\n}\n","export const BASE_CELL_HEIGHT = 95;\n","import strings from './strings';\n\nexport default function loc(key) {\n    return key.split('.').reduce((acc, item) => acc[item] || '', strings);\n}","export default {\n    paletteName: '🎨 Palette Cleanser',\n    shared: {\n        title: 'Layer Style Colors',\n        subtitle: 'These colors are from fills and borders in your Layer Styles. They can be easily reused and updated throughout your designs.'\n    },\n    unique: {\n        title: 'Unique Colors',\n        subtitle: 'These colors are from fills and borders in your document that aren\\'t part of a Layer Style. Unique styles can work for simple designs, but it\\'s hard to maintain a consistent palette as your design grows.'\n    },\n    fillsHeader: 'Fills',\n    bordersHeader: 'Borders',\n    messages: {\n        paletteBuilt: '🎉 Your palette is ready 🎉',\n        paletteUpdated: '✅ Palette updated ✅',\n    }\n}","module.exports = require(\"sketch\");"],"sourceRoot":""}